apply plugin: 'com.android.application'

def cfg = rootProject.ext.android
def appIds = rootProject.ext.appIds

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId appIds["app"]
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("boolean","isModuleA",String.valueOf(rootProject.ext.isMoudleA))
        buildConfigField("boolean","isModuleB",String.valueOf(rootProject.ext.isMoudleB))

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName : project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation project(path: ':base')
    annotationProcessor project(":solarexrouter-compiler")

    if (isMoudleA) {
        implementation project(path: ':moudlea')
    }
    if (isMoudleB) {
        implementation project(path: ':moudleb')
    }

}
